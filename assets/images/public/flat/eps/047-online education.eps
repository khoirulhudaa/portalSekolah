%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Tue Feb 16 07:43:04 2021
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 0 384 384
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
1 g
364.688 354.344 m 364.688 118.586 l 364.688 106.148 354.602 96.062 342.164
 96.062 c 41.836 96.062 l 29.398 96.062 19.312 106.148 19.312 118.586 c 
19.312 354.344 l h
364.688 354.344 m f
q
49.344 126.098 285.312 180.191 re W n
[0.750812 0 0 0.750812 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.588235 0.819608 0.952941 ]
      /C1 [ 0.588235 0.819608 0.952941 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.588235 0.819608 0.952941 ]
      /C1 [ 0.8 1 0.956863 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000083866 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 255.723007 167.945999 255.723007 407.946014 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
245.309 336.324 m 245.309 342.129 240.602 346.836 234.797 346.836 c 149.203
 346.836 l 143.398 346.836 138.691 342.129 138.691 336.324 c 5.797 336.324
 l 5.797 355.844 l 5.797 368.285 15.883 378.367 28.324 378.367 c 355.676
 378.367 l 368.117 378.367 378.203 368.285 378.203 355.844 c 378.203 336.324
 l h
245.309 336.324 m f
q
285.852 306.289 m 285.852 207.973 l 285.852 193.91 276.094 181.727 262.367
 178.66 c 215.273 168.141 l 168.727 168.141 l 121.633 178.66 l 107.91 181.727
 98.148 193.91 98.148 207.973 c 98.148 306.289 l h
285.852 306.289 m W n
[0.750812 0 0 0.750812 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.658824 0.670588 1 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.980392 0.784314 1 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000036422 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 255.723007 223.945999 255.723007 407.946014 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
168.727 168.141 m 141.715 174.176 l 192 229.707 l 242.285 174.176 l 215.273
 168.141 l h
168.727 168.141 m f
192 191.418 m 215.273 168.141 l 215.273 146.367 l 168.727 146.367 l 168.727
 168.141 l h
192 191.418 m f
192 153.125 m 167.121 153.125 146.953 132.957 146.953 108.078 c 146.953
 80.297 l 237.047 80.297 l 237.047 108.078 l 237.047 132.957 216.879 153.125
 192 153.125 c h
192 153.125 m f
q
192 5.965 m 116.918 32.246 l 146.953 42.754 l 146.953 80.297 l 146.953 
80.297 161.215 87.805 192 87.805 c 222.785 87.805 237.047 80.297 237.047
 80.297 c 237.047 42.754 l 267.082 32.246 l h
192 5.965 m W n
[0.750812 0 0 0.750812 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.658824 0.670588 1 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.980392 0.784314 1 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000036422 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 255.723007 7.946 255.723007 116.945999 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
370.316 330.691 m 370.316 118.586 l 370.316 103.062 357.688 90.434 342.164
 90.434 c 242.68 90.434 l 242.68 46.75 l 256.945 41.758 l 256.945 77.293
 l 268.207 77.293 l 268.207 37.816 l 284.125 32.246 l 192 0 l 99.875 32.246
 l 141.32 46.75 l 141.32 90.434 l 41.836 90.434 l 26.312 90.434 13.684 103.062
 13.684 118.586 c 13.684 330.691 l 0.168 330.691 l 0.168 355.844 l 0.168
 371.371 12.797 384 28.324 384 c 355.676 384 l 371.203 384 383.832 371.371
 383.832 355.844 c 383.832 330.691 l h
133.965 32.246 m 192 11.934 l 250.035 32.246 l 192 52.559 l h
263.594 173.168 m 220.906 163.629 l 220.906 149.668 l 227.531 145.051 233.004
 138.898 236.805 131.727 c 329.023 131.727 l 329.023 300.66 l 291.484 300.66
 l 291.484 207.973 l 291.484 191.148 280.016 176.836 263.594 173.168 c h
242.68 219.195 m 242.68 300.66 l 197.633 300.66 l 197.633 231.879 l 244.254
 180.387 l 261.141 184.156 l 272.375 186.668 280.219 196.461 280.219 207.973
 c 280.219 300.66 l 253.941 300.66 l 253.941 219.195 l h
130.059 219.195 m 130.059 300.66 l 103.781 300.66 l 103.781 207.973 l 103.781
 196.461 111.625 186.668 122.859 184.156 c 139.746 180.387 l 186.367 231.879
 l 186.367 300.66 l 141.32 300.66 l 141.32 219.195 l h
192 93.438 m 210.789 93.438 223.789 90.707 231.418 88.402 c 231.418 108.078
 l 231.418 129.812 213.734 147.492 192 147.492 c 170.266 147.492 152.582
 129.812 152.582 108.078 c 152.582 88.402 l 160.211 90.707 173.211 93.438
 192 93.438 c h
152.582 76.543 m 152.582 50.691 l 192 64.488 l 231.418 50.691 l 231.418
 76.543 l 225.945 78.523 213.008 82.176 192 82.176 c 170.977 82.172 158.035
 78.516 152.582 76.543 c h
209.645 155.582 m 209.645 165.809 l 192 183.453 l 174.355 165.809 l 174.355
 155.582 l 179.852 157.633 185.797 158.758 192 158.758 c 198.203 158.758
 204.148 157.633 209.645 155.582 c h
163.094 149.668 m 163.094 163.629 l 120.406 173.168 l 103.984 176.836 92.516
 191.148 92.516 207.973 c 92.516 300.66 l 54.977 300.66 l 54.977 131.727
 l 147.195 131.727 l 151 138.898 156.473 145.051 163.094 149.668 c h
152.383 177.562 m 166.934 174.312 l 192 199.379 l 217.07 174.312 l 231.617
 177.562 l 192 221.32 l h
24.945 118.586 m 24.945 109.273 32.523 101.695 41.836 101.695 c 141.32 
101.695 l 141.32 108.078 l 141.32 112.348 141.859 116.5 142.859 120.465 
c 43.715 120.465 l 43.715 311.922 l 340.285 311.922 l 340.285 120.465 l 
241.141 120.465 l 242.141 116.5 242.68 112.348 242.68 108.078 c 242.68 101.695
 l 342.164 101.695 l 351.477 101.695 359.055 109.273 359.055 118.586 c 359.055
 330.691 l 239.676 330.691 l 239.676 336.324 l 239.676 339.016 237.488 341.203
 234.797 341.203 c 149.203 341.203 l 146.512 341.203 144.324 339.016 144.324
 336.324 c 144.324 330.691 l 24.945 330.691 l h
372.57 355.844 m 372.57 365.16 364.992 372.738 355.676 372.738 c 28.324
 372.738 l 19.008 372.738 11.43 365.16 11.43 355.844 c 11.43 341.953 l 134.074
 341.953 l 136.363 348.086 142.281 352.465 149.203 352.465 c 234.797 352.465
 l 241.719 352.465 247.637 348.086 249.926 341.953 c 372.57 341.953 l h
372.57 355.844 m W n
[0.750812 0 0 0.750812 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0901961 0.309804 0.639216 ]
      /C1 [ 0.0901961 0.309804 0.639216 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0901961 0.309804 0.639216 ]
      /C1 [ 0.690196 0.266667 0.686275 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000011981 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 255.723007 0 255.723007 511.446014 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
