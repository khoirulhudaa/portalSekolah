%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Tue Feb 16 07:42:43 2021
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 0 384 384
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
1 g
376.625 146.406 m 376.625 146.406 293.965 243.973 192 243.973 c 90.035 
243.973 7.379 146.406 7.379 146.406 c 7.379 146.406 90.035 48.844 192 48.844
 c 293.965 48.844 376.625 146.406 376.625 146.406 c h
376.625 146.406 m f
q
267.051 146.406 m 267.051 187.855 233.449 221.457 192 221.457 c 150.551
 221.457 116.949 187.855 116.949 146.406 c 116.949 104.957 150.551 71.359
 192 71.359 c 211.906 71.359 230.992 79.266 245.07 93.34 c 259.145 107.414
 267.051 126.504 267.051 146.406 c h
267.051 146.406 m W n
[0.7505 0 0 0.7505 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.658824 0.670588 1 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.980392 0.784314 1 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000036422 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 255.830002 95.080002 255.830002 295.079987 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
237.031 133.648 m 192 114.887 l 146.969 133.648 l 163.48 140.527 l 163.48
 174.176 l 163.48 174.176 171.258 182.43 192 182.43 c 212.742 182.43 220.52
 174.176 220.52 174.176 c 220.52 140.527 l h
237.031 133.648 m f
368.367 355.797 m 368.367 310.766 l 216.016 310.766 l 202.754 310.766 192
 321.52 192 334.781 c 192 321.52 181.246 310.766 167.984 310.766 c 15.633
 310.766 l 15.633 355.797 l 5.875 355.797 l 5.875 378.312 l 378.125 378.312
 l 378.125 355.797 l h
368.367 355.797 m f
q
58.133 199.734 m 89.293 222.484 137.812 249.602 192 249.602 c 246.191 249.602
 294.707 222.484 325.867 199.734 c 359.434 175.23 380.059 151.062 380.918
 150.047 c 384 146.406 l 380.918 142.77 l 380.059 141.754 359.434 117.582
 325.867 93.078 c 294.707 70.332 246.191 43.215 192 43.215 c 137.812 43.215
 89.293 70.332 58.133 93.078 c 24.566 117.582 3.945 141.75 3.082 142.77 
c 0 146.406 l 3.082 150.047 l 3.945 151.062 24.566 175.23 58.133 199.734
 c h
64.992 102.008 m 94.75 80.32 140.938 54.473 192 54.473 c 243.062 54.473
 289.25 80.324 319.008 102.008 c 344.086 120.289 362.055 138.773 369.074
 146.406 c 362.055 154.039 344.086 172.527 319.008 190.805 c 289.25 212.492
 243.062 238.344 192 238.344 c 140.938 238.344 94.75 212.492 64.992 190.805
 c 39.914 172.527 21.945 154.039 14.93 146.406 c 21.949 138.773 39.914 120.285
 64.992 102.008 c h
192 227.086 m 236.488 227.086 272.68 190.895 272.68 146.406 c 272.68 101.922
 236.488 65.73 192 65.73 c 147.516 65.73 111.32 101.922 111.32 146.406 c
 111.32 190.895 147.516 227.086 192 227.086 c h
192 76.984 m 230.281 76.984 261.422 108.129 261.422 146.406 c 261.422 184.688
 230.281 215.828 192 215.828 c 153.723 215.828 122.578 184.688 122.578 146.406
 c 122.578 108.129 153.723 76.984 192 76.984 c h
157.852 176.41 m 159.383 178.035 l 160.352 179.062 169.48 188.059 192 188.059
 c 214.52 188.059 223.648 179.062 224.617 178.035 c 226.148 176.41 l 226.148
 144.281 l 251.664 133.648 l 192 108.789 l 132.336 133.648 l 157.852 144.281
 l h
214.891 171.457 m 212.016 173.32 204.906 176.805 192 176.805 c 179.148 
176.805 172.035 173.336 169.109 171.441 c 169.109 148.973 l 192 158.508 
l 214.891 148.973 l h
192 120.984 m 222.395 133.648 l 192 146.312 l 161.605 133.648 l h
373.996 305.137 m 216.016 305.137 l 206.148 305.137 197.391 309.984 192
 317.422 c 186.609 309.984 177.852 305.137 167.984 305.137 c 10.004 305.137
 l 10.004 350.168 l 0.246 350.168 l 0.246 383.941 l 383.754 383.941 l 383.754
 350.168 l 373.996 350.168 l h
197.629 334.781 m 197.629 324.645 205.879 316.395 216.016 316.395 c 362.738
 316.395 l 362.738 350.168 l 197.629 350.168 l h
21.262 316.395 m 167.984 316.395 l 178.121 316.395 186.371 324.645 186.371
 334.781 c 186.371 350.168 l 21.262 350.168 l h
372.496 372.684 m 11.504 372.684 l 11.504 361.426 l 372.496 361.426 l h
197.629 28.578 m 186.371 28.578 l 186.371 0.059 l 197.629 0.059 l h
186.371 264.234 m 197.629 264.234 l 197.629 292.754 l 186.371 292.754 l
 h
118.828 42.582 m 104.57 17.883 l 114.32 12.254 l 128.578 36.953 l h
255.422 255.859 m 265.168 250.23 l 279.43 274.93 l 269.68 280.559 l h
265.172 42.582 m 255.422 36.953 l 269.68 12.254 l 279.43 17.883 l h
104.57 274.93 m 118.828 250.23 l 128.578 255.859 l 114.32 280.559 l h
104.57 274.93 m W n
[0.7505 0 0 0.7505 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0901961 0.309804 0.639216 ]
      /C1 [ 0.0901961 0.309804 0.639216 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0901961 0.309804 0.639216 ]
      /C1 [ 0.690196 0.266667 0.686275 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000011981 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 255.830002 0.08 255.830002 511.579987 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
